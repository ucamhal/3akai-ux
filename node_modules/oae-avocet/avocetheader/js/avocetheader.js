/*!
 * Copyright 2014 Digital Services, University of Cambridge Licensed
 * under the Educational Community License, Version 2.0 (the
 * "License"); you may not use this file except in compliance with the
 * License. You may obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

 define(['jquery', 'oae.core'], function($, oae) {

    return function(uid) {

        // The widget container
        var $rootel = $('#' + uid);

        var activePage = window.location.pathname;
        var links = [
            {
                'href': '/',
                'title': 'Home'
            },
            {
                'href': '/todo',
                'title': 'About',
                'subLinks': [
                    {
                        'href': '/changing',
                        'title': 'What\'s changing?'
                    },
                    {
                        'href': '/todo',
                        'title': 'How to?'
                    },
                    {
                        'href': '/openaccess',
                        'title': 'Open Access'
                    }
                ]
            }
        ];

        /**
         * Initialise the top navigation
         */
        var initNavigation = function() {
            // Gets the active link from the links array, if a sublink is currently active it returns the parent link
            var activeNavItem = _.find(links, function(link) {
                return link.href === activePage || _.find(link.subLinks, function(subLink) {
                    return subLink.href === activePage;
                });
            });

            oae.api.util.template().render($('#oa-avocetheader-nav-template'), {
                'activeNavLink': activeNavItem ? activeNavItem.href : undefined,
                'links': links
            }, $('#oa-avocetheader-nav-container'));

            oae.api.util.template().render($('#oa-avocetheader-subnav-template'), {
                'activePage': activePage,
                'activeNavLink': activeNavItem ? activeNavItem.href : undefined,
                'links': _.filter(links, function(link) {
                    return link.subLinks;
                })
            }, $('#oa-avocetheader-subnav-container'));

            // Cache the currently active subnavigation if there is one
            var $activeSubnav = $('.oa-subnav-active');

            // Resets the subnavigation to its original state
            var resetSubnav = function() {
                $('.oa-subnav-active').removeClass('oa-subnav-active');
                $activeSubnav.addClass('oa-subnav-active');
            };

            $('#oa-avocetheader-nav-container a').on('mouseenter', function() {
                var $el = $(this);
                var subnavSelector = $el.data('toggle-subnav');
                // Toogle the subnavigation for this navigation item if one is specified
                if (subnavSelector) {
                    $('.oa-subnav-active').removeClass('oa-subnav-active');
                    $(subnavSelector).addClass('oa-subnav-active');
                } else {
                    resetSubnav();
                }
            });

            // Reset the subnavigation to its original state when the mouse leaves the header
            $rootel.on('mouseleave', resetSubnav);
        };

        /**
         * Initialise signin/signout functionality in the header
         */
        var initAuthentication = function() {
            oae.api.util.template().render($('#oa-avocetheader-authentication-template', $rootel), {
                'links': links
            }, $('#oa-avocetheader-authentication-container', $rootel));
            // Trigger a login when the login button is clicked.
            $rootel.on('click', '#oa-avocetheader-login', oae.api.authentication.loginFirstEnabledStrategy);
            // Log the current user out when the log out button is clicked
            $rootel.on('click', '#oa-avocetheader-logout', function() {
                oae.api.authentication.logout(function() {
                    window.location = '/';
                });
            });
        };

        initNavigation();
        initAuthentication();
    };
});
