/*!
 * Copyright 2014 Digital Services, University of Cambridge Licensed
 * under the Educational Community License, Version 2.0 (the
 * "License"); you may not use this file except in compliance with the
 * License. You may obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

define(['jquery', 'underscore', 'oae.core'], function($, _, oae) {

    return function(uid) {

        // The widget container
        var $rootel = $('#' + uid);

        // Variable that will be used to keep track of the current infinite scroll instance
        var infinityScroll = false;

        /**
         * Converts a Number to a String and adds padding if the number is lower than 10.
         *
         * @param  {Number}   nr  The number to add padding to
         * @return {String}       The number converted to a string which is at least 2 characters long
         */
        var zeroPadding = function(nr) {
            return nr < 10 ? '0' + nr : String(nr);
        };

        /**
         * Initialize a new infinite scroll container that fetches a the list of publications
         * uploaded by the current user
         */
        var getMyUploads = function() {
            // Disable the previous infinite scroll
            if (infinityScroll) {
                infinityScroll.kill();
            }

            // Set up the infinite scroll for the content library
            var url = '/api/publications/created/' + oae.data.me.id;
            infinityScroll = $('#oa-myuploads-container', $rootel).infiniteScroll(url, {
                'limit': 12
            }, '#oa-myuploads-template', {
                'emptyListProcessor': function() {
                    oae.api.util.template().render($('#oa-myuploads-noresults-template', $rootel), {}, $('#oa-myuploads-container', $rootel));
                },
                'postProcessor': function(data) {
                    // Update the results in place
                    _.each(data.results, function(publication) {
                        var date = new Date(publication.date);
                        // Reformat date to DD/MM/YYYY
                        publication.date = zeroPadding(date.getDate()) + '/' + zeroPadding(date.getMonth() + 1) + '/' + date.getFullYear();
                    });
                    return data;
                }
            });
        };

        /**
         * Hide the uploads list when the publication upload process starts and reload the
         * uploads list when the publication upload process finishes
         */
        var showHideUploads= function() {
            $(document).on('oa.submitpublication.start', function() {
                $rootel.hide();
            });
            $(document).on('oa.submitpublication.end', function() {
                $rootel.show();
                // Reload the uploads list
                getMyUploads();
            });
        };

        showHideUploads();
        getMyUploads();

    };
});
